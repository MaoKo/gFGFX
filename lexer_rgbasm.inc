
include "xcalm.alm"
include "string.inc"
include "bitset.inc"
include "automata.inc"
include "regex.inc"
include "lexer.inc"
include "parser.inc"

macro decl_and_compile? _name?*, _expr?*, _skip?:_constant?._false?
    _regex?._declare? _name, _skip
    _regex?._compile? _name, _expr
end macro

decl_and_compile? T_PERIOD, "."
decl_and_compile? T_COMMA, ","
decl_and_compile? T_COLON, ":"
decl_and_compile? T_LBRACK, "\["
decl_and_compile? T_RBRACK, "]"
decl_and_compile? T_LPAREN, "\("
decl_and_compile? T_RPAREN, ")"

decl_and_compile? T_OP_LOGICNOT, "!"
decl_and_compile? T_OP_LOGICAND, "&&"
decl_and_compile? T_OP_LOGICOR, "\|\|"
decl_and_compile? T_OP_LOGICGT, ">"
decl_and_compile? T_OP_LOGICLT, "<"
decl_and_compile? T_OP_LOGICGE, ">="
decl_and_compile? T_OP_LOGICLE, "<="
decl_and_compile? T_OP_LOGICNE, "!="
decl_and_compile? T_OP_LOGICEQU, "=="
decl_and_compile? T_OP_ADD, "\+"
decl_and_compile? T_OP_SUB, "-"
decl_and_compile? T_OP_OR, "\|"
decl_and_compile? T_OP_XOR, "^"
decl_and_compile? T_OP_AND, "&"
decl_and_compile? T_OP_SHL, "<<"
decl_and_compile? T_OP_SHR, ">>"
decl_and_compile? T_OP_MUL, "*"
decl_and_compile? T_OP_DIV, "/"
decl_and_compile? T_OP_MOD, "%"
decl_and_compile? T_OP_NOT, "~"
decl_and_compile? T_OP_EXP, "**"

decl_and_compile? T_POP_ADDEQ, "\+="
decl_and_compile? T_POP_SUBEQ, "-="
decl_and_compile? T_POP_MULEQ, "*="
decl_and_compile? T_POP_DIVEQ, "/="
decl_and_compile? T_POP_MODEQ, "%="
decl_and_compile? T_POP_OREQ, "\|="
decl_and_compile? T_POP_XOREQ, "^="
decl_and_compile? T_POP_ANDEQ, "&="
decl_and_compile? T_POP_SHLEQ, "<<="
decl_and_compile? T_POP_SHREQ, ">>="

decl_and_compile? T_POP_INCLUDE, "(?i:include)"
decl_and_compile? T_POP_PRINT, "(?i:print)"
decl_and_compile? T_POP_PRINTLN, "(?i:println)"
decl_and_compile? T_POP_PRINTF, "(?i:printf)"
decl_and_compile? T_POP_PRINTT, "(?i:printt)"
decl_and_compile? T_POP_PRINTV, "(?i:printv)"
decl_and_compile? T_POP_PRINTI, "(?i:printi)"
decl_and_compile? T_POP_IF, "(?i:if)"
decl_and_compile? T_POP_ELIF, "(?i:elif)"
decl_and_compile? T_POP_ELSE, "(?i:else)"
decl_and_compile? T_POP_ENDC, "(?i:endc)"
decl_and_compile? T_POP_EXPORT, "(?i:export)"

